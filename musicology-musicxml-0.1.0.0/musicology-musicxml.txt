-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Please see the README on GitHub at
--   <a>https://github.com/chfin/musicology-musicxml#readme</a>
@package musicology-musicxml
@version 0.1.0.0

module Musicology.MusicXML
parseWithIds :: Bool -> Text -> Maybe Document
parseWithoutIds :: Text -> Maybe Document
idfy :: Bool -> Text -> Text
data XmlNote
XmlNote :: Ratio Int -> Ratio Int -> Ratio Int -> Ratio Int -> SPitch -> Int -> Maybe String -> XmlNote
[_onsetWritten] :: XmlNote -> Ratio Int
[_offsetWritten] :: XmlNote -> Ratio Int
[_onsetHeard] :: XmlNote -> Ratio Int
[_offsetHeard] :: XmlNote -> Ratio Int
[_pitch] :: XmlNote -> SPitch
[_part] :: XmlNote -> Int
[_id] :: XmlNote -> Maybe String
type XmlRecord = Record '["onsetWritten" :-> Ratio Int, "offsetWritten" :-> Ratio Int, "onsetHeard" :-> Ratio Int, "offsetHeard" :-> Ratio Int, "pitch" :-> SPitch, "part" :-> Int, "id" :-> Maybe String]
newtype AsWritten
AsWritten :: XmlNote -> AsWritten
xmlNoteToRecord :: XmlNote -> XmlRecord
notesToFrame :: [XmlNote] -> Frame XmlRecord
asNoteWritten :: XmlNote -> Note SInterval (Ratio Int)
asNoteWithIdWritten :: XmlNote -> NoteId SInterval (Ratio Int) (Maybe String)
asNoteHeard :: XmlNote -> Note SInterval (Ratio Int)
asNoteWithIdHeard :: XmlNote -> NoteId SInterval (Ratio Int) (Maybe String)
xmlNotes :: Maybe Document -> [XmlNote]
parseScore :: Document -> ([XmlNote], [[(Ratio Int, TimeSignature)]])
instance GHC.Show.Show Musicology.MusicXML.XmlNoteW
instance GHC.Classes.Ord Musicology.MusicXML.XmlNoteW
instance GHC.Classes.Eq Musicology.MusicXML.XmlNoteW
instance GHC.Show.Show Musicology.MusicXML.XmlNote
instance GHC.Classes.Ord Musicology.MusicXML.XmlNote
instance GHC.Classes.Eq Musicology.MusicXML.XmlNote
instance GHC.Show.Show Musicology.MusicXML.AsWritten
instance GHC.Classes.Ord Musicology.MusicXML.AsWritten
instance GHC.Classes.Eq Musicology.MusicXML.AsWritten
instance GHC.Show.Show Musicology.MusicXML.FlowCommand
instance GHC.Classes.Ord Musicology.MusicXML.FlowCommand
instance GHC.Classes.Eq Musicology.MusicXML.FlowCommand
instance GHC.Show.Show t => GHC.Show.Show (Musicology.MusicXML.FlowMarker t)
instance GHC.Classes.Ord t => GHC.Classes.Ord (Musicology.MusicXML.FlowMarker t)
instance GHC.Classes.Eq t => GHC.Classes.Eq (Musicology.MusicXML.FlowMarker t)
instance GHC.Classes.Ord t => GHC.Classes.Ord (Musicology.MusicXML.Jump t)
instance GHC.Classes.Eq t => GHC.Classes.Eq (Musicology.MusicXML.Jump t)
instance GHC.Show.Show t => GHC.Show.Show (Musicology.MusicXML.Jump t)
instance GHC.Show.Show t => GHC.Show.Show (Musicology.MusicXML.FlowState t)
instance GHC.Show.Show n => GHC.Show.Show (Musicology.MusicXML.ParsingState n)
instance Musicology.Core.Timed Musicology.MusicXML.AsWritten
instance Musicology.Core.HasTime Musicology.MusicXML.AsWritten
instance Musicology.Core.Pitched Musicology.MusicXML.AsWritten
instance Musicology.Core.HasPitch Musicology.MusicXML.AsWritten
instance Musicology.Core.Timed Musicology.MusicXML.XmlNote
instance Musicology.Core.HasTime Musicology.MusicXML.XmlNote
instance Musicology.Core.Pitched Musicology.MusicXML.XmlNote
instance Musicology.Core.HasPitch Musicology.MusicXML.XmlNote
