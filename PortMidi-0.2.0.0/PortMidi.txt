-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A binding for PortMedia/PortMidi
--   
--   A Haskell binding for PortMedia/PortMidi
@package PortMidi
@version 0.2.0.0


-- | Interface to PortMidi
module Sound.PortMidi

-- | Represents real errors of the C enum <tt>PmError</tt>
data PMError
HostError :: PMError
InvalidDeviceId :: PMError
InsufficientMemory :: PMError
BufferTooSmall :: PMError
BufferOverflow :: PMError
BadPtr :: PMError
BadData :: PMError
InternalError :: PMError
BufferMaxSize :: PMError

-- | Represents non-errors of the C enum <tt>PmError</tt>
data PMSuccess

-- | Returned by <a>poll</a> when there is no data, and returned by other
--   functions when there is no error.
NoError'NoData :: PMSuccess

-- | Only returned by <a>poll</a> when data is available.
GotData :: PMSuccess

-- | Represents a count of <a>PMEvent</a>s
newtype PMEventCount
PMEventCount :: CInt -> PMEventCount
type PMStream = ForeignPtr PortMidiStream
data DeviceInfo
DeviceInfo :: String -> String -> Bool -> Bool -> Bool -> DeviceInfo
[interface] :: DeviceInfo -> String
[name] :: DeviceInfo -> String
[input] :: DeviceInfo -> Bool
[output] :: DeviceInfo -> Bool
[opened] :: DeviceInfo -> Bool
type DeviceID = Int
data PMMsg
PMMsg :: {-# UNPACK #-} !CLong -> {-# UNPACK #-} !CLong -> {-# UNPACK #-} !CLong -> PMMsg
[status] :: PMMsg -> {-# UNPACK #-} !CLong
[data1] :: PMMsg -> {-# UNPACK #-} !CLong
[data2] :: PMMsg -> {-# UNPACK #-} !CLong
data PMEvent
PMEvent :: {-# UNPACK #-} !CLong -> {-# UNPACK #-} !Timestamp -> PMEvent
[message] :: PMEvent -> {-# UNPACK #-} !CLong
[timestamp] :: PMEvent -> {-# UNPACK #-} !Timestamp
filterActive :: CLong
filterSysex :: CLong
filterClock :: CLong
filterPlay :: CLong
filterTick :: CLong
filterFD :: CLong
filterUndefined :: CLong
filterReset :: CLong
filterRealtime :: CLong
filterNote :: CLong
filterChannelAftertouch :: CLong
filterPolyAftertouch :: CLong
filterAftertouch :: CLong
filterProgram :: CLong
filterControl :: CLong
filterPitchBend :: CLong
filterMTC :: CLong
filterSongPosition :: CLong
filterSongSelect :: CLong
filterTune :: CLong
filterSystemCommon :: CLong
initialize :: IO (Either PMError PMSuccess)
terminate :: IO (Either PMError PMSuccess)
hasHostError :: PMStream -> IO Bool
getErrorText :: PMError -> IO String
getSuccessText :: PMSuccess -> IO String
getText :: Either PMError PMSuccess -> IO String
countDevices :: IO DeviceID
getDefaultInputDeviceID :: IO (Maybe DeviceID)
getDefaultOutputDeviceID :: IO (Maybe DeviceID)
getDeviceInfo :: DeviceID -> IO DeviceInfo
openInput :: DeviceID -> IO (Either PMError PMStream)
openOutput :: DeviceID -> Int -> IO (Either PMError PMStream)
setFilter :: PMStream -> CLong -> IO (Either PMError PMSuccess)
channel :: Int -> CLong
setChannelMask :: PMStream -> CLong -> IO (Either PMError PMSuccess)
abort :: PMStream -> IO (Either PMError PMSuccess)
close :: PMStream -> IO (Either PMError PMSuccess)

-- | Returns wether or not a subsequent call to <a>readEvents</a> would
--   return some <a>PMEvent</a>s or not.
poll :: PMStream -> IO (Either PMError PMSuccess)

-- | Reads at most 256 <a>PMEvent</a>s, using a dynamically allocated
--   buffer.
readEvents :: PMStream -> IO (Either PMError [PMEvent])

-- | Reads <a>PMEvent</a>s and writes them to the buffer passed as
--   argument.
readEventsToBuffer :: PMStream -> Ptr PMEvent -> CLong -> IO (Either PMError PMEventCount)
writeEvents :: PMStream -> [PMEvent] -> IO (Either PMError PMSuccess)
writeShort :: PMStream -> PMEvent -> IO (Either PMError PMSuccess)
writeSysEx :: PMStream -> Timestamp -> String -> IO (Either PMError PMSuccess)
time :: IO Timestamp
encodeMsg :: PMMsg -> CLong
decodeMsg :: CLong -> PMMsg
instance GHC.Show.Show Sound.PortMidi.PMSuccess
instance GHC.Classes.Eq Sound.PortMidi.PMSuccess
instance GHC.Show.Show Sound.PortMidi.PMError
instance GHC.Classes.Eq Sound.PortMidi.PMError
instance GHC.Classes.Ord Sound.PortMidi.PMEventCount
instance GHC.Classes.Eq Sound.PortMidi.PMEventCount
instance GHC.Show.Show Sound.PortMidi.PMEventCount
instance GHC.Enum.Enum Sound.PortMidi.PMEventCount
instance GHC.Real.Real Sound.PortMidi.PMEventCount
instance GHC.Real.Integral Sound.PortMidi.PMEventCount
instance GHC.Num.Num Sound.PortMidi.PMEventCount
instance GHC.Show.Show Sound.PortMidi.PMMsg
instance GHC.Classes.Eq Sound.PortMidi.PMMsg
instance GHC.Show.Show Sound.PortMidi.PMEvent
instance GHC.Classes.Eq Sound.PortMidi.PMEvent
instance Foreign.Storable.Storable Sound.PortMidi.PMEvent
instance GHC.Enum.Enum Sound.PortMidi.PMError
instance GHC.Enum.Enum Sound.PortMidi.PMSuccess
